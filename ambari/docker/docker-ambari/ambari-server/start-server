#!/bin/bash

: ${BRIDGE_IP:="172.17.42.1"}
: ${CLOUD_PLATFORM:="none"}

[[ "TRACE" ]] && set -x

debug() {
  [[ "DEBUG" ]]  && echo "[DEBUG] $@" 1>&2
}

# --dns isn't available for: docker run --net=host
# sed -i /etc/resolf.conf fails:
# sed: cannot rename /etc/sedU9oCRy: Device or resource busy
# here comes the tempfile workaround ...
#fix-nameserver() {
#  cat>/etc/resolv.conf<<EOF
#nameserver $BRIDGE_IP
#search service.consul node.dc1.consul
#EOF
#}

start_ambari() {
  while [ -z "$(netstat -tulpn | grep 8080)" ]; do
    ambari-server start
    sleep 30
  done
}

wait_for_db() {
  while : ; do
    PGPASSWORD=$POSTGRES_PWS psql -d $POSTGRES_DB -h $POSTGRES_SERVER -U $POSTGRES_USER -c "select 1"
    [[ $? == 0 ]] && break
    sleep 5
  done
}

config-ambari-server() {
  if [ -z "$POSTGRES_SERVER" ]
  then
    echo Remote db not configured using postgres by localhost
    ambari-server setup -s \
      --java-home $JAVA_HOME
  else
    wait_for_db
    echo Configure ambari server
    ambari-server setup -s \
      --database=postgres \
      --databasehost=$POSTGRES_SERVER \
      --databaseport=$POSTGRES_PORT \
      --databasename=$POSTGRES_DB \
      --databaseusername=$POSTGRES_USER \
      --databasepassword=$POSTGRES_PWS \
      --java-home $JAVA_HOME
    PGPASSWORD=$POSTGRES_PWS psql -d $POSTGRES_DB -h $POSTGRES_SERVER -U $POSTGRES_USER -f /var/lib/ambari-server/resources/Ambari-DDL-Postgres-CREATE.sql
    ambari-server setup --jdbc-db=mysql --jdbc-driver=/tmp/mysql-connector-java-5.1.17.jar
    ambari-server setup --jdbc-db=postgres --jdbc-driver=/tmp/postgresql-8.4-703.jdbc4.jar
    # echo Configure remote jdbc connection
    # echo "server.persistence.type=remote" >> /etc/ambari-server/conf/ambari.properties
    # echo "server.jdbc.user.name=$POSTGRES_USER" >> /etc/ambari-server/conf/ambari.properties
    # echo "server.jdbc.database=postgres" >> /etc/ambari-server/conf/ambari.properties
    # echo "server.jdbc.database_name=$POSTGRES_DB" >> /etc/ambari-server/conf/ambari.properties
    # echo "server.jdbc.url=jdbc:postgresql://$POSTGRES_SERVER:5432/postgres" >> /etc/ambari-server/conf/ambari.properties
    # echo "server.jdbc.rca.url=jdbc:postgresql://$POSTGRES_SERVER:5432/postgres" >> /etc/ambari-server/conf/ambari.properties
    # PGPASSWORD=$POSTGRES_PWS psql -h $POSTGRES_SERVER -U ambari postgres < /var/lib/ambari-server/resources/Ambari-DDL-Postgres-CREATE.sql
  fi
}

# GCP overrides the /etc/hosts file with its internal hostname, so we need to change the
# order of the host resolution to try the DNS first
reorder_dns_lookup() {
  if [ "$CLOUD_PLATFORM" == "GCP" ] || [ "$CLOUD_PLATFORM" == "GCC" ]; then
    sed -i "/^hosts:/ s/ *files dns/ dns files/" /etc/nsswitch.conf
  fi
}

main() {
#  fix-nameserver
#  reorder_dns_lookup
  config-ambari-server
  start_ambari
  while true; do
    sleep 3
    tail -f /var/log/ambari-server/ambari-server.log
  done
}

main "$@"
